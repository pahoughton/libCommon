#
# -*- Makefile -*- for t
#
# Created: 11/21/95 using MakeConfigs 4.00.00.a.08
#
# $Id$
#
# (see end of file for Log info)

#
# Include standard MakeConfig configuration for GNU make required
#

#
# Do not modifiy 'makefile_type'
makefile_type = program
# Uncomment 'show_compile_command' to output compile command.
show_commands = true

# Include standard MakeConfig configuration for GNU make required
include Make/make.cfg.4.00

# 
# =USE_CURRENT_MAKEFILE=
# When you re-gen a make file, every thing between 
# these tags will be kept int the new makefile
# if you want it re-gen'd, just delete the tags
#

NAME		= t

INSTALL_BINDIR	= $(LOCAL_BIN_DIR)

VER_MAJOR	= 1
VER_MINOR	= 00
VER_RELEASE	= 00.a.01
VERSION		= $(VER_MAJOR).$(VER_MINOR).$(VER_RELEASE)

PROGRAM_DEFAULT	= $(NAME)
PROGRAM_DEBUG	= $(NAME)g
PROGRAM_PROFILE	= $(NAME)pg

PROTO_H		= _$(NAME)_Proto.h

###### D E F I N E S  #####
# 
# Config defines avalable
#
# $(X11_DEF)	    defines for X11
# $(SYB_DEF)	    defines for SYB
# $(MMALLOC_DEF)    defines for libmmalloc
# $(DATA_DEF)	    defines for libData (C++)
# $(CLUE_DEF)	    defines for libClue (C++)
# $(COMMON_DEF)	    defines for libCommon
# $(WT_DEF)	    defines for libWt
# $(WCF_DEF)	    defines for libWcf (CommFabric)
#


SRCDEFINES	= 
PRJDEFINES	= -DVERSION=\"$(VERSION)\"

DEFINES		= $(PRJDEFINES) $(SRCDEFINES) 

######  I N C L U D E S #####
#
# Config includes available
#
# $(X11_INC)
# $(SYB_INC)
# $(MALLOC_ALPHA_INC)	$(MMALLOC_BETA_INC)	$(MMALLOC_INC)
# $(DATA_ALPHA_INC) 	$(DATA_BETA_INC) 	$(DATA_INC)
# $(CLUE_ALPHA_INC)	$(CLUE_BETA_INC) 	$(CLUE_INC)
# $(COMMON_ALPHA_INC)	$(COMMON_BETA_INC) 	$(COMMON_INC)
# $(WT_ALPHA_INC) 	$(WT_BETA_INC) 		$(WT_INC)
# $(WCF_ALPHA_INC) 	$(WCF_BETA_INC) 	$(WCF_INC)
#
# $(LOCAL_ALPHA_INC) 	$(LOCAL_BETA_INC) 	$(LOCAL_INC)
#


TOPDIR		= ../../../src

SRCINCDIR	= -I. $(COMMON_ALPHA_INC)
PRJINCDIR	= 

INCDIRS		= $(SRCINCDIR)	\
		  $(PRJINCDIR)

###### C O M P I L E / C P P #####
#
# Config flags available
#
# $(CC_OPTIMIZE) $(CXX_OPTIMIZE)
# $(CC_DEBUG)	 $(CXX_DEBUG)
# $(CC_PROFILE)	 $(CXX_PROFILE)
# $(CC_WARN)	 $(CXX_WARN)
#


CPPOTHER 	=

CCDEBUG		= $(CC_OPTIMIZE)
CCOTHER		= $(CC_WARN)

CXXDEBUG	= $(CXX_OPTIMIZE)
CXXOTHER	= $(CXX_WARN)

# ##### I N S T A L L #####

INSTALL_BIN_FLAGS	= 

# ##### L I N K  /  L I B R A R I E S #####
#
# Config flags available
#
# $(LD_OPTIMIZE)
# $(LD_DEBUG)
# $(LD_PROFILE)
#
# Config libraryies available
#
# $(X11_LIBS)
# $(XAW_LIBS)
# $(XM_LIBS)
# $(SYB_LIBS)
# $(MALLOC_ALPHA_LIBS)	$(MMALLOC_BETA_LIBS)	$(MMALLOC_LIBS)
# $(DATA_ALPHA_LIBS)	$(DATA_BETA_LIBS)	$(DATA_LIBS)
# $(CLUE_ALPHA_LIBS)	$(CLUE_BETA_LIBS)	$(CLUE_LIBS)
# $(COMMON_ALPHA_LIBS)	$(COMMON_BETA_LIBS)	$(COMMON_LIBS)
# $(WT_ALPHA_LIBS)	$(WT_BETA_LIBS)		$(WT_LIBS)
# $(WCF_ALPHA_LIBS)	$(WCF_BETA_LIBS)	$(WCF_LIBS)
#
# $(LOCAL_ALPHA_LDIR)	$(LOCAL_BETA_LDIR)	$(LOCAL_LDIR)
#
# $(X11_LDIR)
#


# remove comment on next line to use libraries with debuging info
DEBUG_LIBS	= # g

LDDEBUG		= 
LDOTHER		=

LDLIBDIRS	=
LDLIBS		= $(COMMON_ALPHA_LIBS) -lm

#
# =USE_CURRENT_MAKEFILE=
#

# **** S O U R C E   F I L E S ****

C_SOURCES	=			\
	main.c                          \
	tTempFileName.c                 \
	tLOGIT.c			\

hold = \
	AvlTestLargeValues.c            \
	AvlTestSmallValues.c            \
	CompareNodes.c                  \
	DateTimeTest.c                  \
	DeleteError.c                   \
	StringTest.c                    \
	TestOutput.c                    \
	avl_test.c                      \
	key_gen.c                       \
	$(ARCH_C_SOURCES)               \


USER_INCLUDES	=		\
	$(USER_H_INCS)		\
	$(USER_HH_INCS)		\
	$(USER_II_INCS)		\



###### T A R G E T S #####
#
# Targets defined in make.cfg.targets.
#
# default: 	all
# depend:	create .depend
# profile:	MAKE CCDEBUG=CC_PROFILE all
# proto:	create $(PROTO_H)
# clean:  	rm -f LIB_OBJECTS LIBRARY
# realclean:	rm -f LIB_OBJECTS LIBRARY .depend.lib PROTO_H TAGS
# tags:		create TAGS using etags
#


include Make/make.cfg.targets.4.00

default debug profile:: proto

default:: objects/default $(PROGRAM_DEFAULT)

all::	default debug profile

debug:: objects/debug
	$(HIDE) $(MAKE) CCDEBUG='$(CC_DEBUG)' \
			CXXDEBUG='$(CXX_DEBUG)' \
			LDDEBUG='$(LD_DEBUG)'
			$(PROGRAM_DEBUG)

profile:: objects/profile
	$(HIDE) $(MAKE) CCDEBUG='$(CC_PROFILE)' \
			CXXDEBUG='$(CXX_PROFILE)' \
			LDDEBUG='$(LD_PROFILE)'
			$(PROGRAM_PROFILE)

$(PROGRAM_DEFAULT):: $(OBJECTS:%=objects/default/%)
	$(LD) $(LD_FLAGS) $^ $(LD_LIBS) -o $@

$(PROGRAM_DEBUG):: $(OBJECTS:%=objects/debug/%)
	$(LD) $(LD_FLAGS) $^ $(LD_LIBS) -o $@

$(PROGRAM_PROFILE):: $(OBJECTS:%=objects/profile/%)
	$(LD) $(LD_FLAGS) $^ $(LD_LIBS) -o $@

install:: default $(INSTALL_DIR)/$(PROGRAM_DEFAULT)


test:	default

#
# include dependancies generated by 'make depend'
#
-include .depend

#
# =MAKEFILE_LOG=
#
# $Log$
#
# =MAKEFILE_LOG=
#



