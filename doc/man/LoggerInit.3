.\"
.\" File:      LoggerInit.3
.\" Project:   Common
.\" Desc:        
.\"
.\"     Man page for LoggerInit() Ver: 2.4
.\"
.\" Author:      Paul A. Houghton - (paul.houghton@wcom.com)
.\" Created:     04/29/97 08:56
.\"
.\" Revision History: (See end of file for Revision Log)
.\"
.\"  Last Mod By:    $Author$
.\"  Last Mod:       $Date$
.\"  Version:        $Revision$
.\"
.\" $Id$
.\"
.TH LoggerInit 3  "04/29/97 08:56 (Common)"
.SH NAME
LoggerInit \- initialize logger parameters.
.SH SYNOPSIS
#include <Common.h>
.LP
typedef void (* LoggerFunct)(
.PD 0
.RS
.TP 18
void *
closure,
.TP 18
cosnt char *
srcFile,
.TP 18
long
srcLine,
.TP 18
const char *
mesgFmt,
.TP 18
va_list
mesgArgs )
.RE
.PD
.LP
Ret_Status LoggerInit(
.PD 0
.RS
.TP 18
const char *
logPath,
.TP 18
const char *
logFileName,
.TP 18
LogOutFileType
outputFileType,
.TP 18
long
maxByteCount,
.TP 18
long
trimIncrement,
.TP 18
LogSetLevelType
setType,
.TP 18
int
outputLevels
.TP 18
BOOL
outputDate,
.TP 18
BOOL
outputSourceLoc,
.TP 18
BOOL
teeOutput,
.TP 18
LoggerFunct
funct,
.TP 18
void *
closure )
.RE
.PD
.SH ARGUMENTS
.TP
logPath
directory to create log file in. Default is '.'
.TP
logFileName
name of log file. Default is 'program.log'. If the output file type is
LOG_BY_DATE, the 'logFileName' is prefixed with the date and a '.'.
.TP
outputFileType
the type of log file to create. This can be one of LOG_BY_DATE (a new
log file is created every day), LOG_REOPEN (the log file can be
deleted while the program is running), LOG_KEEP_OPEN (the log file is
kept open by the program). Default value is 'LOG_REOPEN'.
.TP
maxByteCount
maximum size of the log file. When the log file gets to this size,
at least, 'trimIncrement' bytes will be removed. A value of 0 means no
maximum. Default is 0.
.TP
trimIncrement
the minimum number of bytes to remove from the beginning of the log
file when it hits 'maxByteCount'. The log is trimmed up to the next
end of line character. A value of 0 means the lesser of 2048 or
maxByteCount / 4. Default is 0.
.TP
setType
defines how to interpret the 'outputLevels' param. LOG_SET override
all current settings with 'outputLevels' value. LOG_ON means turn on
'outputLevles' along with current settings. LOG_OFF means stop logging
'outputLevels'. No default value.
.TP
outputLevels
specifies what types of log messages to write to the log file. The
different types can be or'd (i.e. LOG_TEST | LOG_ERROR ) together to
specify multiple settings. Possible settings are: LOG_NONE, LOG_ERROR,
LOG_WARN, LOG_APP1, LOG_APP2, LOG_APP3, LOG_APP4, LOG_APP4, LOG_APP5,
LOG_APP6, LOG_LIB1, LOG_LIB2, LOG_LIB3, LOG_LIB4,
LOG_INFO, LOG_TEST, LOG_DEBUG, LOG_FUNCT and LOG_ALL.
Default value is LOG_ALL
.TP
outputDate
true or false, time stamp each log entry with the current time. output
format is '02/25/94 14:00:05'. Default value is TRUE.
.TP
outputSourceLoc
true or false, include the source file name and line number in each
log entry. Default value is TRUE.,
.TP
teeOutput
true or false, tee log entries to stderr.
.TP
funct
the function to call that will perform the actual logging.
.RS
.TP
closure
the closure value passed to LoggerInit.
.TP
srcFile
the source file name that generated the log entry.
.TP
srcLine
the source file line number of where the log entry was generated.
.TP
level
the level of the log entry.
.TP
mesgFmt
a printf like format string
.TP
mesgArgs
the args for the format string.
.RE
.TP
closure
the closure value to pass to the funct.
.SH DESCRIPTION
Initialize the Logger(3). You only need to use this function if you want
change the default behavior of Logger(3).
.SH RETURNS
.TP
RET_SUCCEED
no errors.
.TP
RET_ERROR
an error occured during initialization.
.SH EXAMPLE
.nf

    ...

    if( LoggerInit( "../logs", "doit.log",
		    LOG_REOPEN,
		    4096000, 4096,
		    LOG_SET, LogLevelFromString( argv[1] ),
		    TRUE, TRUE, FALSE, 0, 0 )
        != RET_SUCCEED )
      {
        ERROR( ET_COMMON, CommonErrno, ("LoggerInit failed!") );
        return;
      }
    ...
.fn    	
.SH FILES
.PD 0
/usr/local/include/Common.h
.LP
/usr/local/lib/libCommon.a
.PD
.SH "SEE ALSO"
Common(3), LogLevelSetString(3), LogLevelFromString(3), LogLevelString(3),
LoggerSetLogFile(3), LoggerSetOutputLevel(3), LoggerSetDate(3),
LoggerSetLoc(3), LoggerSetTee(3), LoggerSetFunct(3),
LoggerGetFunct(3), LoggerLevel(3), LoggerLoc(3), Logger(3),
LoggerArgs(3), LoggerTrim(3),
LOGITLOC(3), LOGIT(3), LOGFUNCT(3), LOGERROR(3) 
.SH AUTHORS
Paul A. Houghton - (paul.houghton@wcom.com)

.\"
.\" Revision Log:
.\"
.\" $Log$
.\" Revision 2.0  1995/10/28 17:34:48  houghton
.\" Move to Version 2.0
.\"
.\" Revision 1.1  1994/07/05  21:38:10  houghton
.\" Updated man pages for all libCommon functions.
.\"
.\"
