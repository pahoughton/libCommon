.\"
.\" File:	SetErrorHandler.3
.\" Project:	Common
.\" Desc:        
.\"
.\"     Man page for SetErrorHandler() Ver: 2.5
.\"
.\" Author:      Paul A. Houghton - (paul.houghton@wcom.com)
.\" Created:     06/17/94 18:07
.\"
.\" Revision History: (See end of file for Revision Log)
.\"
.\"  Last Mod By:   $Author$
.\"  Last Mod:	    $Date$
.\"  Version:	    $Revision$
.\"
.\" $Id$
.\"
.TH SetErrorHandler 3  "4/29/97 (Common)"
.SH NAME
SetErrorHandler \- specify the function to call when an error occurs.
.SH SYNOPSIS
#include <Common.h>
.LP
typedef int
(* CommonErrorHandler)(
.PD 0
.RS
.TP 18
void *
closure,
.TP 18
const char *
srcFile,
.TP 18
long
srcLine,
.TP 18
CommonErrorType
errorType
.TP 18
int
errorValue,
.TP 18
const char *
errDesc,
.TP 18
const char *
mesgFormat,
.TP 18
va_list
args ),
.RE
.PD
.LP
void SetErrorHandler(
.PD 0
.RS
.TP 20
CommonErrorHandler
errorHandler,
.TP 20
void *
closure )
.RE
.PD
.SH ARGUMENTS
.TP
errorHandler
the function to execute when an error occurs.
.RS
.TP
closure
the closure passed to SetErrorHandler
.TP
srcFile
the name of the source file.
.TP
srcLine
the line number in the source file where the error occured.
.TP
errorType
the type of error value.
.TP
errorValue
the numeric value of the error.
.TP
errorDesc
a description of the error.
.TP
mesgFormat
the printf like format string.
.TP
args
the args for the printf like format string.
.RE
.TP
closure
The default closure value to pass to the error handler.
.SH DESCRIPTION
This function set the errorHandler function and closure.
The errorHandler will be called when a library error
occurs or when ErrorArgs is called (ErrorArgs is also called by Error).
.SH RETURNS
None.
.SH EXAMPLE
.nf

int
ErrorHandler(
  void *	    closure,
  const char *	    srcFile,
  long		    srcLine,
  CommonErrorType   errorType,
  int		    errorValue,
  const char *	    errorDesc,
  const char *	    mesgFormat,
  va_list	    args
  )
{
  static char DefaultErrorMesg[ 2048 ];

  DefaultErrorMesg[0] = 0;
  
  switch( errorType )
    {
    case ET_OSERROR:
      sprintf( DefaultErrorMesg, "%s: (%d) %s ",
	       ErrorTypeString( errorType ),
	       errorValue,
	       strerror( errorValue ) );
      break;

    case ET_COMMON:
      sprintf( DefaultErrorMesg, "%s: %s ",
	       ErrorTypeString( errorType ),
	       CommonErrorString( errorValue ) );
      
      break;

    default:
      sprintf( DefaultErrorMesg, "%s(%d): ",
	       ErrorTypeString( errorType ),
	       errorValue );
      break;
    }

  if( errorDesc &&
      ( strlen( DefaultErrorMesg ) + strlen( errorDesc ) + 10 )
      < sizeof( DefaultErrorMesg ) )
    {
      strcat( DefaultErrorMesg, errorDesc );
      strcat( DefaultErrorMesg, " " );
    }
      
  if( (strlen( DefaultErrorMesg ) + strlen( mesgFormat ) + 10 )
      < sizeof( DefaultErrorMesg ) )
    {
      strcat( DefaultErrorMesg, mesgFormat );
    }
  else
    {
      DefaultErrorMesg[0] = 0;
    }

  LoggerArgs( srcFile,
	      srcLine,
	      LOG_ERROR,
	      NULL,
	      ( ( DefaultErrorMesg[0] != 0 ) ? DefaultErrorMesg : mesgFormat ),
	      args );

  return( INT_MAX );
}

int main( int argc, char * argv[] )
{
   ...

   SetErrorHandler( ErrorHandler, NULL );

   ...

   if( DoSomeWork() == RET_ERROR )
     {
        ERROR( ET_APP, APP_WORK_FAILED, ("Bad things Happend") );
	exit(1);
     }
}
.fn
.SH FILES
.nf
%INSTALL_LIB_DIR%/libCommon.a
%INSTALL_INC_DIR%/Common.h
.fn
.SH "SEE ALSO"
Common(3), GetErrorHandler(3), Error(3), ErrorArgs(3), SetError(3),
ErrorMesg(3), ErrorTypeString(3), CommonErrorString(3),
SET_ERROR_CLOSURE(3), SET_ERROR(3), ERROR(3), ERROR_APP(3)
.SH AUTHORS
Paul Houghton - (paul.houghton@wcom.com)

.\"
.\" $Log$
.\" Revision 2.2  1998/09/24 14:30:06  houghton
.\" Reworked to replace directory names with Makefile variable value.
.\"
.\" Revision 2.1  1997/05/07 11:35:03  houghton
.\" Updated for release 2.01.02
.\"
.\" Revision 2.0  1995/10/28 17:34:52  houghton
.\" Move to Version 2.0
.\"
.\" Revision 1.3  1994/07/05  21:50:35  houghton
.\" fixup man page comment header
.\"
.\" Revision 1.2  1994/07/05  21:38:12  houghton
.\" Updated man pages for all libCommon functions.
.\"
.\" Revision 1.1  1994/06/17  18:07:15  houghton
.\" New man pages ... what a concept!
.\"
.\"
